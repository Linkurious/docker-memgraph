# Default values for memgraph.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  memgraph:
    repository: memgraph/memgraph-mage
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # See https://hub.docker.com/r/memgraph/memgraph-mage/tags
    tag: "1.18-memgraph-2.18"
  lab:
    repository: memgraph/lab
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "2.15.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

memgraph:
  password: ""
  ## Environment variables to pass to memgraph
  ##
  env: []
    # - name: "LKE_AUTH_REQUIRED"
    #   value: "true"

  ## envFrom to pass to server
  ##
  envFrom: []
    # - configMapRef:
    #     name: config-map-name
    # - secretRef:
    #     name: secret-name
  ## Provide an existing secret containing the license key, it must contain a key named "MEMGRAPH_ENTERPRISE_LICENSE"
  ## and "MEMGRAPH_ORGANIZATION_NAME"
  existingLicenseSecret: ""

  dataset:
    ## Enable the dataset
    ##
    enabled: false
    ## The name of the dataset to use
    ##
    url: ""
    ## The name of the secret containing login information for the dataset
    ##
    secretName: ""
    ## The key in the secret containing the user to download the dataset
    ##
    usernameSecretKey: ""
    ## The key in the secret containing the password to download the dataset
    ##
    passwordSecretKey: ""

platform:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  seccompProfile:
    type: RuntimeDefault
  # readOnlyRootFilesystem: true

service:
  type: ClusterIP

hostPostfix: k8s.dev.linkurious.net
ingressRoute:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - paths:
        - path: /
          pathType: ImplementationSpecific
      # host: memgraph.k8s.dev.linkurious.net
  tls:
    secretName: wildcard-default-cert
    hosts: []
      # - chart-example.local

memgraphConfig:
  - "--also-log-to-stderr=true"
  - "--log-level=TRACE"
    # - "--storage-mode=ON_DISK_TRANSACTIONAL"
  - "--memory-limit=1536"
  # for efficient schema sampling
  - "--storage-enable-schema-metadata=true"
  - "--storage-automatic-label-index-creation-enabled=true"
  - "--storage-automatic-edge-type-index-creation-enabled=true"
  # for efficiently loading edges by ID
  - "--storage-enable-edges-metadata=true"
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # We reccomend setting memory limit 200Mi higher than the above memgraph --memory-limit
  limits:
  #   cpu: 100m
    memory: 1794Mi
  requests:
    cpu: 100m
    memory: 1794Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Default network policy rules used by all components
networkPolicies:
  # -- Create NetworkPolicy objects for all components
  create: true
  allowSameNamespaceIngress: true
  allowAllNamespaceIngress: false

nodeSelector: {}

tolerations: []

affinity: {}
